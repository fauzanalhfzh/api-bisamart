generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int      @id @default(autoincrement())
  name         String?
  phone_number String   @unique
  email        String   @unique
  password     String
  ratings      Float    @default(0)
  total_rides  Float    @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  token        String?
  orders       orders[] @relation("user_orders")
}

enum VehicleType {
  MOBIL
  MOTOR
}

enum StatusDriver {
  INACTIVE
  ACTIVE
}

enum OrderStatus {
  PENDING
  ACCEPTED
  COMPLETED
  CANCELLED
}

model driver {
  id                  Int          @id @default(autoincrement())
  name                String
  phone_number        String       @unique
  email               String       @unique
  password            String
  country             String
  ktp                 String       @unique
  address_ktp         String
  ktp_img             String
  vehicle_type        VehicleType  @default(MOTOR)
  sim                 String       @unique
  sim_img             String
  selfie_with_sim     String
  vehicle_brand       String
  vehicle_color       String
  license_plate       String
  registration_number String
  profil_img          String
  ratings             Float        @default(0)
  total_earning       Float        @default(0)
  total_rides         Float        @default(0)
  pending_rides       Float        @default(0)
  cancel_rides        Float        @default(0)
  status              StatusDriver @default(INACTIVE)
  created_at          DateTime     @default(now())
  updated_at          DateTime     @updatedAt
  token               String?      @db.VarChar(100)
  orders              orders[]     @relation("driver_orders")
}

model orders {
  id                        Int         @id @default(autoincrement())
  user_id                   Int
  driver_id                 Int
  charge                    Float
  current_location_name     String
  destination_location_name String
  distance                  String
  status                    OrderStatus @default(PENDING)
  rating                    Float?
  user                      user        @relation("user_orders", fields: [user_id], references: [id])
  driver                    driver      @relation("driver_orders", fields: [driver_id], references: [id])
  cratedAt                  DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt
}
